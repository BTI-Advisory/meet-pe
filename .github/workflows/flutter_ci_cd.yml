name: Flutter CI/CD

on:
  push:
    branches: [main, pre-prod, prod]

jobs:
  build-and-deploy:
    name: Build and Deploy (Android)
    runs-on: macos-latest

    env:
      KEYSTORE_PASSWORD: ${{ secrets.KEYSTORE_PASSWORD }}
      KEY_PASSWORD: ${{ secrets.KEY_PASSWORD }}
      KEY_ALIAS: ${{ secrets.KEY_ALIAS }}

    steps:
      - name: 📥 Checkout code
        uses: actions/checkout@v4

      - name: 💻 Set up Flutter
        uses: subosito/flutter-action@v2
        with:
          flutter-version: '3.29.3'

      - name: 📦 Install dependencies
        run: flutter pub get

      - name: 🧹 Clean and fresh pub cache
        run: |
          rm -f pubspec.lock
          flutter clean
          flutter pub get

      - name: 🧪 Run analyzer and tests
        run: flutter analyze || true

      # 🔐 Décode le keystore depuis le secret
      - name: 🔐 Decode keystore file
        if: github.ref == 'refs/heads/prod'
        run: |
          echo "${{ secrets.KEYSTORE_FILE }}" | base64 --decode > android/upload-keystore.jks

      # 🧪 Debug : liste les infos du keystore (si valide)
      - name: 🧪 Debug keystore
        if: github.ref == 'refs/heads/prod'
        run: |
          echo "🔍 Vérification du keystore..."
          keytool -list -v -keystore android/upload-keystore.jks -storepass "$KEYSTORE_PASSWORD" -alias "$KEY_ALIAS"

      # 🧾 Crée le fichier key.properties
      - name: ✍️ Create key.properties
        if: github.ref == 'refs/heads/prod'
        run: |
          cat > android/key.properties <<EOF
          storePassword=$KEYSTORE_PASSWORD
          keyPassword=$KEY_PASSWORD
          keyAlias=$KEY_ALIAS
          storeFile=../upload-keystore.jks
          EOF

      # 🔑 Déchiffre la clé Google Play
      - name: 🔑 Decode Play Store JSON key
        if: github.ref == 'refs/heads/prod'
        run: |
          echo "${{ secrets.GOOGLE_PLAY_JSON_KEY }}" | base64 --decode > android/play-store-key.json

      # 🏗️ Build release bundle
      - name: 🏗️ Build appbundle (release)
        if: github.ref == 'refs/heads/prod'
        run: flutter build appbundle --release -v

      # 🚀 Déploiement sur Google Play avec Fastlane
      - name: 🚀 Deploy to Google Play (Fastlane)
        if: github.ref == 'refs/heads/prod'
        run: |
          cd android
          bundle install
          bundle exec fastlane android internal

      # 🧹 Nettoyage des fichiers sensibles
      - name: 🧹 Remove sensitive files
        if: github.ref == 'refs/heads/prod'
        run: |
          rm -f android/play-store-key.json
          rm -f android/upload-keystore.jks
